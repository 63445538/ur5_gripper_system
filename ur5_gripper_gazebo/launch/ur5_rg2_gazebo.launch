<?xml version="1.0"?>
<launch>
  <arg name="limited" default="true"  doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="true" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />
  
  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <!--include file="$(find ur_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include-->

  <!-- Convert an xacro and put on parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur5_gripper_description)/robots/ur5_rg2.xacro'" />

  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0
    -J robot::elbow_joint 1.82563
    -J robot::shoulder_pan_joint 0
    -J robot::shoulder_lift_joint -1.36084
    -J robot::wrist_1_joint -2.03355
    -J robot::wrist_2_joint -1.570765
    -J robot::wrist_3_joint 0" respawn="false" output="screen" />



  <!-- push robot_description to factory and spawn robot in gazebo -->
  <!--node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen" /-->

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

  <!-- start this controller -->
  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

  <!-- load other controllers -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />

  <node pkg="timed_roslaunch" type="timed_roslaunch.sh" args="2 ur5_moveit_config ur5_moveit_planning_execution.launch sim:=true" name="timed_roslaunch1" output="screen" />

  <node pkg="timed_roslaunch" type="timed_roslaunch.sh" args="2 ur5_moveit_config moveit_rviz.launch config:=true" name="timed_roslaunch2" output="screen" />

</launch>
